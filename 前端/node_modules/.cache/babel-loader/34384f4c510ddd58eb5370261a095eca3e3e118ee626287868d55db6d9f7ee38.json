{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  // name: 'LoginBox',\n  data() {\n    var checkName = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('用户名不能为空'));\n      }\n      setTimeout(() => {\n        if (value.length > 8) {\n          callback(new Error('用户名不能超过8个字符'));\n        } else {\n          callback();\n        }\n      }, 1000);\n    };\n    var validatePass = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (this.ruleForm.checkPass !== '') {\n          this.$refs.ruleForm.validateField('checkPass');\n        }\n        callback();\n      }\n    };\n    var validatePass2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== this.ruleForm.pass) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      showInfoDialog: false,\n      showInputDialog: false,\n      isLogin: false,\n      isRegiste: true,\n      isChat: true,\n      isConnected: false,\n      showboxlr: true,\n      showboxchat: false,\n      contactsdata: '',\n      // friend_id: res[0][i].friend_id,\n      // avatar: null,\n      // remark: res[0][i].remark,\n      // chat_id: res[0][i].chat_id,\n      // 聊天室id\n      chatsdata: '',\n      // chat_with_id: res[i].chat_with_id,\n      // remark: res[i].remark,\n      // chat_id: res[i].chat_id,\n      // last_msg_time: res[i].last_msg_time,\n      // last_msg: res[i].last_msg,\n      // 消息id\n      msgsdata: '',\n      receivemsgdata: '',\n      chatfriend: '',\n      msgtext: '',\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      ruleForm: {\n        username: '',\n        pass: '',\n        checkPass: ''\n      },\n      rules: {\n        username: [{\n          validator: checkName,\n          trigger: 'blur'\n        }],\n        pass: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }]\n      },\n      // CCC 头像url\n      myAvatar: '',\n      msgAvatar: '',\n      msgOfChat: -1,\n      // CCC1 搜索输入\n      searchInput: '',\n      changeNickname: '',\n      Nickname: ''\n    };\n  },\n  // 在页面刷新前执行断开连接操作\n  beforeCreate() {\n    window.addEventListener('beforeunload', this.disconnect);\n  },\n  created() {\n    console.log(\"myLogin.vue is running!\");\n    if (!this.isConnected) {\n      // 打开 WebSocket 连接\n      this.$socket.open();\n      // 设置连接状态\n      this.isConnected = true;\n      this.sockets.subscribe('receiveMessage', data => {\n        this.msgsdata.push(data[0]);\n      });\n    }\n  },\n  mounted() {\n    console.log(\"mounted is running!\");\n    const dialog = document.querySelector('.el-dialog');\n    if (dialog) {\n      dialog.style.left = '-195px';\n    }\n  },\n  methods: {\n    disconnect() {\n      // 关闭WebSocket连接\n      this.$socket.close();\n      // 移除监听事件\n      window.removeEventListener('beforeunload', this.disconnect);\n    },\n    // CCC 返回好友的头像url\n    getImageUrl(base64Data) {\n      if (base64Data) return `data:image/jpeg;base64,${base64Data}`;else return \"src/images/avatar01.jpg\";\n    },\n    loginEvent() {\n      //   var password = this.loginForm.password\n      var data = {\n        id: this.loginForm.username,\n        password: this.loginForm.password\n      };\n      this.$socket.emit('login', data);\n      this.sockets.subscribe('checkoutAnswer', data => {\n        // console.log(data)\n        if (data.msg === \"用户密码正确\") {\n          // alert(\"欢迎登录！\")\n          this.showboxchat = true;\n          this.showboxlr = false;\n          this.isChat = true;\n          var user_id = this.loginForm.username;\n          console.log(data);\n          //CCC 登录时取得头像数据\n          this.myAvatar = data.avatar;\n          this.Nickname = data.nickname;\n          this.$socket.emit('requestContacts', user_id);\n          this.sockets.subscribe('returnContacts', data => {\n            this.contactsdata = data;\n            console.log(data[0]);\n          });\n          // this.$socket.emit('requestChats', (user_id))\n          // this.sockets.subscribe('returnChats',data => {\n          //   this.chatsdata = data\n          //   // console.log(data)\n          // })\n\n          // console.log(this.chatsdata)\n          // this.chatsdata.chat_id\n          // console.log(chatid)\n        } else {\n          alert(\"用户名或密码错误\");\n        }\n      });\n    },\n    //     receiveallmsg(){\n    //       var chat_id = this.chatsdata[0].chat_id\n    //       console.log(chat_id)\n    //       this.$socket.emit('requestMsgs', (chat_id))\n    //       this.sockets.subscribe('returnMsgs',data => {\n    //         this.msgsdata = data\n    // })\n    // },\n\n    changeNick() {\n      var user_id = this.loginForm.username;\n      console.log(user_id);\n      var new_nickname = this.changeNickname;\n      console.log(new_nickname);\n      this.$socket.emit('changeNickname', user_id, new_nickname);\n      this.Nickname = new_nickname;\n      this.showInputDialog = false;\n    },\n    getClass(msg) {\n      var user_id = this.loginForm.username;\n\n      // console.log(msg.message_id)\n      if (msg.sender_id === user_id) {\n        console.log('right');\n        return 'right';\n      } else {\n        console.log('left');\n        return 'left';\n      }\n    },\n    receivemsg(friend) {\n      this.msgOfChat = friend.chat_id;\n      this.chatfriend = friend;\n      var chat_id = this.chatfriend.chat_id;\n      console.log(chat_id);\n      // CCC 定义显示的头像\n      this.msgAvatar = this.chatfriend.avatar;\n      this.$socket.emit('requestMsgs', chat_id);\n      this.sockets.subscribe('returnMsgs', data => {\n        this.msgsdata = data;\n      });\n    },\n    // 发消息并更新消息列表\n    sendMsg() {\n      if (this.msgOfChat != -1) {\n        var msgdata = {\n          chat_id: this.chatfriend.chat_id,\n          sender_id: this.loginForm.username,\n          receiver_id: this.chatfriend.friend_id,\n          send_time: new Date().toISOString().slice(0, 19).replace('T', ' '),\n          message_content: this.msgtext\n        };\n        this.$socket.emit('sendMessage', msgdata);\n        var chat_id = this.chatfriend.chat_id;\n        console.log(chat_id);\n        this.$socket.emit('requestMsgs', chat_id);\n        this.sockets.subscribe('returnMsgs', data => {\n          this.msgsdata = data;\n        });\n        this.msgtext = '';\n      } else {\n        alert(\"请先选择一个聊天！\");\n      }\n    },\n    // 注册\n    submitForm(formName) {\n      //   var id = this.ruleForm.username\n      //   var password = this.ruleForm.pass\n\n      var data = {\n        id: this.ruleForm.username,\n        password: this.ruleForm.pass\n      };\n      var checkpass = this.ruleForm.checkPass;\n      if (checkpass === data.password) {\n        this.$socket.emit('signup', data);\n        this.sockets.subscribe('signupFail', msg => {\n          alert('注册信息不正确');\n        });\n        // 登陆成功\n        this.sockets.subscribe('signupSuccess', msg => {\n          alert('请登录');\n        });\n      } else {\n        alert('注册信息不正确');\n      }\n    },\n    handleClose(done) {\n      this.$confirm('确认关闭？').then(_ => {\n        done();\n      }).catch(_ => {});\n    },\n    deleteEvent() {\n      var user_id = this.loginForm.username;\n      this.$socket.emit('cancelAccount', user_id);\n      this.sockets.subscribe('cancelAccountSuccess', () => {\n        alert(\"注销成功\");\n        // 缺：用户注销后跳转界面\n        this.showboxchat = false;\n        this.showboxlr = true;\n      });\n    },\n    requestContactsEvent() {\n      var user_id = this.loginForm.username;\n      this.$socket.emit('requestContacts', user_id);\n      this.sockets.subscribe('returnContacts', data => {});\n    },\n    // resetForm(formName) {\n    //   this.$refs[formName].resetFields();\n    // },\n\n    // 打开文件选择器\n    openFilePicker() {\n      this.$refs.fileInput.click();\n    },\n    // 修改头像\n    changeAvatarRequest(event) {\n      const file = event.target.files[0];\n      if (!file) {\n        alert(\"!file\");\n        return;\n      }\n      var user_id = this.loginForm.username;\n      const reader = new FileReader();\n      reader.onload = () => {\n        const imageData = reader.result.split(',')[1]; // 去除前缀信息\n        this.$socket.emit('changeAvatarRequest', user_id, imageData);\n      };\n      reader.readAsDataURL(file);\n      // // 图片压缩\n      // compressImage(file, maxWidth, maxHeight, quality, function(compressedDataURL) {\n      //   // 在这里可以使用压缩后的DataURL，例如显示在<img>元素中\n      //   const imgElement = document.getElementById('compressedImg');\n      //   imgElement.src = compressedDataURL;\n\n      //   var user_id = this.loginForm.username\n      //   const reader = new FileReader();\n      //   reader.onload = () => {\n      //     const imageData = reader.result.split(',')[1]; // 去除前缀信息\n      //     this.$socket.emit('changeAvatarRequest', user_id, imageData);\n      //   };\n      //   reader.readAsDataURL(file);\n      // });\n      // alert(\"get it\");\n\n      // this.$socket.emit('changeAvatarRequest', user_id, file);\n\n      // 处理返回事件\n      this.sockets.subscribe('changeAvatar', newAvatar => {\n        this.myAvatar = newAvatar;\n      });\n    },\n    // 压缩图片函数\n    compressImage(file, maxWidth, maxHeight, quality, callback) {\n      const reader = new FileReader();\n      reader.onload = function (event) {\n        const img = new Image();\n        img.src = event.target.result;\n        img.onload = function () {\n          const canvas = document.createElement('canvas');\n          let width = img.width;\n          let height = img.height;\n\n          // 计算压缩后的宽度和高度\n          if (width > maxWidth) {\n            height *= maxWidth / width;\n            width = maxWidth;\n          }\n          if (height > maxHeight) {\n            width *= maxHeight / height;\n            height = maxHeight;\n          }\n          canvas.width = width;\n          canvas.height = height;\n          const ctx = canvas.getContext('2d');\n\n          // 在canvas上绘制压缩后的图片\n          ctx.drawImage(img, 0, 0, width, height);\n\n          // 将canvas上的图片转为压缩后的DataURL\n          const compressedDataURL = canvas.toDataURL('image/jpeg', quality / 100);\n\n          // 调用回调函数传递压缩后的DataURL\n          callback(compressedDataURL);\n        };\n      };\n      reader.readAsDataURL(file);\n    },\n    // CCC1 添加好友\n    addFriend() {\n      // alert('add')\n      this.$socket.emit('addFriend', {\n        user_id: this.loginForm.username,\n        friend_id: this.searchInput\n      });\n      this.sockets.subscribe('addFriendFail', () => {\n        alert(\"用户不存在！\");\n      });\n      this.sockets.subscribe('addFriendSuccess', (contact, pci) => {\n        this.$socket.emit('requestContacts', this.loginForm.username);\n      });\n      this.searchInput = '';\n    },\n    // CCC1 删除好友\n    deleteFriend(friend) {\n      event.preventDefault();\n      const confirmed = confirm('确认删除该好友吗?这将清除所有的聊天记录！');\n      if (confirmed) {\n        // 执行删除操作\n        this.chatfriend = friend;\n        this.$socket.emit('deleteFriend', friend.chat_id, this.loginForm.username, friend.friend_id);\n        this.sockets.subscribe('deleteFriendSuccess', () => {\n          // alert(\"删除成功！\");\n          this.$socket.emit('requestContacts', this.loginForm.username);\n        });\n      } else {\n        // 用户点击取消，不执行删除操作\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","checkName","rule","value","callback","Error","setTimeout","length","validatePass","ruleForm","checkPass","$refs","validateField","validatePass2","pass","showInfoDialog","showInputDialog","isLogin","isRegiste","isChat","isConnected","showboxlr","showboxchat","contactsdata","chatsdata","msgsdata","receivemsgdata","chatfriend","msgtext","loginForm","username","password","rules","validator","trigger","myAvatar","msgAvatar","msgOfChat","searchInput","changeNickname","Nickname","beforeCreate","window","addEventListener","disconnect","created","console","log","$socket","open","sockets","subscribe","push","mounted","dialog","document","querySelector","style","left","methods","close","removeEventListener","getImageUrl","base64Data","loginEvent","id","emit","msg","user_id","avatar","nickname","alert","changeNick","new_nickname","getClass","sender_id","receivemsg","friend","chat_id","sendMsg","msgdata","receiver_id","friend_id","send_time","Date","toISOString","slice","replace","message_content","submitForm","formName","checkpass","handleClose","done","$confirm","then","_","catch","deleteEvent","requestContactsEvent","openFilePicker","fileInput","click","changeAvatarRequest","event","file","target","files","reader","FileReader","onload","imageData","result","split","readAsDataURL","newAvatar","compressImage","maxWidth","maxHeight","quality","img","Image","src","canvas","createElement","width","height","ctx","getContext","drawImage","compressedDataURL","toDataURL","addFriend","contact","pci","deleteFriend","preventDefault","confirmed","confirm"],"sources":["src/App.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <transition name=\"fade\">\r\n      <div class=\"main-box\" v-show=\"showboxlr\">\r\n        <div :class=\"['container', 'container-login', { 'is-txl is-z200': isLogin }, {'is-hidden': isRegiste}]\">\r\n          <form>\r\n            <h2 class=\"title\">登录聊天室</h2>\r\n            <span class=\"text\">使用您的用户名和密码</span>\r\n            <input class=\"form__input\" v-model=\"loginForm.username\" type=\"text\" placeholder=\"用户名\" />\r\n            <input class=\"form__input\" v-model=\"loginForm.password\" type=\"password\" placeholder=\"密码\" />\r\n            <div class=\"primary-btn\" @click=\"loginEvent\">立即登录</div>\r\n          </form>\r\n        </div>\r\n        <div :class=\"['container', 'container-register', { 'is-txl': isLogin }, {'is-hidden': isLogin}]\">\r\n          <form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\">\r\n            <h2 class=\"title\">创建您的账户</h2>\r\n            <span class=\"text\">运用用户名和密码</span>\r\n            <input class=\"form__input\" v-model=\"ruleForm.username\" type=\"text\" placeholder=\"用户名\" />\r\n            <input class=\"form__input\" v-model=\"ruleForm.pass\" type=\"text\" placeholder=\"密码\" />\r\n            <input class=\"form__input\" v-model=\"ruleForm.checkPass\" type=\"password\" placeholder=\"确认密码\" />\r\n            <div class=\"primary-btn\" @click=\"submitForm\">立即注册</div>\r\n          </form>\r\n        </div>\r\n        <div :class=\"['switch', { login: isLogin }]\" v-show=\"showboxlr\">\r\n          <div class=\"switch__circle\"></div>\r\n          <div class=\"switch__circle switch__circle_top\"></div>\r\n          <div class=\"switch__container\">\r\n            <h2>{{ isRegiste ? '你好，欢迎使用 !' : '欢迎回来 !' }}</h2>\r\n            <p>\r\n              {{\r\n                isRegiste\r\n                  ? '使用您的个人信息以创建您的个人聊天账户'\r\n                  : '每天聊一聊，生活更美妙'\r\n              }}\r\n            </p>\r\n            <div class=\"primary-btn\" @click=\"isLogin = !isLogin,isRegiste=!isRegiste\">\r\n              {{ isLogin ? '立即注册' : '立即登录' }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </transition>\r\n    <transition name=\"fade\">\r\n      <div class=\"container\"  v-show=\"showboxchat\">\r\n        <div class=\"box verboxleft\">\r\n          <div class=\"avatar-container\">\r\n            <!-- CCC 个人头像 -->\r\n            <img :src=\"getImageUrl(myAvatar)\" alt=\"Avatar\" class=\"avatar\" @click=\"showInfoDialog = true\">\r\n            <el-dialog :visible.sync=\"showInfoDialog\" width=\"20%\" :top=\"'55px'\" :before-close=\"handleClose\" custom-class=\"userinfo-dialog\">\r\n              <div class=\"image-text\">  \r\n                <!-- CCC 个人信息小框 -->\r\n\r\n                <div>\r\n                  <!-- 头像 -->\r\n                  <input type=\"file\" accept=\"image/jpeg\" ref=\"fileInput\" class=\"image-dialog\" @change=\"changeAvatarRequest\" style=\"display: none\" />\r\n                  <img :src=\"getImageUrl(myAvatar)\" alt=\"Avatar\" class=\"image-dialog\" @click=\"openFilePicker\" style=\"cursor: pointer\" />\r\n                  <!-- <img src=\"./images/avatar02.jpg\" alt=\"tupian\" class=\"image-dialog\" @click=\"changeAvatarEvent\"> -->\r\n                </div>\r\n     \r\n                <div class=\"text-dialog\" style=\"font-size:20px;\">\r\n                  {{ (Nickname !== null) ? Nickname : \"默认用户昵称\" }}\r\n                  <!-- <button class=\"btn0\" style=\"margin-right: 10px;border-radius: 4px; border:none; padding:5px 40px; background-color: #25c672; color: #ffffff;font-size: 20px;\" @click=\"receiveallmsg\">收消息</button> -->\r\n                  <button class=\"btn0 btn-dialog\" type=\"text\" style=\"font-size: 10px; border-radius: 4px;\" @click=\"showInputDialog = true\">修改昵称</button>\r\n                  <el-dialog :visible.sync=\"showInputDialog \" width=\"20%\" :top=\"'55px'\" :before-close=\"handleClose\" custom-class=\"userinfo-dialog\">\r\n                    <div class=\"image-input\"> \r\n                      <input type=\"text\" v-model=\"changeNickname\" class=\"search-input\" placeholder=\"输入昵称\"> \r\n                      <el-button @click=\"changeNick\">提交</el-button>\r\n                    </div>\r\n                    <!-- <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"showInputDialog = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"showInputDialog = false\">确 定</el-button>\r\n                    </span> -->\r\n                  </el-dialog>\r\n                </div>\r\n                  <div class=\"text-dialog\">{{ loginForm.username }}</div>\r\n                  <div style=\"clear: both;\"></div>\r\n                </div>\r\n                <div class=\"btn-dialog\">\r\n                  <!-- <button class=\"btn0\" style=\"margin-right: 10px;border-radius: 4px; border:none; padding:5px 40px; background-color: #25c672; color: #ffffff;font-size: 20px;\" @click=\"receiveallmsg\">收消息</button> -->\r\n                  <el-button class=\"btn0\" type=\"text\" icon=\"el-icon-delete\" style=\"font-size: 20px;\" @click=\"deleteEvent\"></el-button>\r\n                </div>\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"showInfoDialog = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"showInfoDialog = false\">确 定</el-button>\r\n              </span>\r\n            </el-dialog>\r\n          </div>\r\n          <!-- <div class=\"btn-container\">\r\n            <el-button class=\"btn\" type=\"text\" icon=\"el-icon-chat-round\" style=\"width:0px;height: 0px; font-size: 0px; color: #25c672;\"></el-button>\r\n            <el-button class=\"btn\" type=\"text\" icon=\"el-icon-chat-round\" style=\"font-size: 30px; color: #25c672;\"></el-button>\r\n            <el-button class=\"btn\" type=\"text\" icon=\"el-icon-user\" style=\"font-size: 30px; color: #25c672;\"></el-button>\r\n            <el-button class=\"btn\" type=\"text\" icon=\"el-icon-setting\" style=\"font-size: 30px; color: #25c672;\"></el-button>\r\n          </div> -->\r\n        </div>\r\n        <div class=\"box verboxmid\">\r\n          <div class=\"verboxmidtop\">\r\n            <!-- CCC1 搜索好友 -->\r\n            <input type=\"text\" v-model=\"searchInput\" class=\"search-input\" @keyup.enter=\"addFriend\" placeholder=\"搜索\">\r\n            <i class=\"el-icon-circle-plus-outline\" @click=\"addFriend\"></i>\r\n          </div>\r\n          <div class=\"verboxmidbottom\">\r\n            <div class=\"scroll-content\">\r\n              <!-- CCC 在好友列表中显示头像 -->\r\n              <!-- CCC1 删除好友 -->\r\n              <div v-for=\"friend in contactsdata\" :key=\"friend.friend_id\" style=\"line-height: 30px;\" @click=\"receivemsg(friend)\" @contextmenu.prevent=\"deleteFriend(friend)\">\r\n                <img :src=\"getImageUrl(friend.avatar)\" alt=\"Avatar\" style=\"display:inline-block; vertical-align: middle; margin-top: 8px; margin-left:8px; margin-right: 8px; margin-bottom: 8px; width: 40px; height: 40px;\"/>\r\n                <span style=\" display: inline-block; font-size: 20px;\">{{ friend.friend_id }}</span>\r\n                {{ xxx }}\r\n                <div v-if=\"index !== contactsdata.length - 1\" class=\"divider\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"box verboxright\">\r\n          <div v-if=\"msgOfChat!==-1\" class=\"verboxrighttop\" style=\"font-size: 20px;\">\r\n            {{ chatfriend.friend_id }}\r\n          </div>\r\n          <div class=\"verboxrightmid\">\r\n            <div v-if=\"chatfriend\" class=\"scroll-content\">\r\n              <div class=\"msg-container\">\r\n              <div v-for=\"msg in msgsdata\" :key=\"msg.message_content\" :class=\"getClass(msg)\">\r\n                <div v-if=\"getClass(msg) === 'left'\" class=\"message-left\">\r\n                  <img :src=\"getImageUrl(msgAvatar)\" alt=\"friendimage\" style=\"width: 30px; height: 30px;\">\r\n                </div>\r\n                {{ msg.message_content }}\r\n                <div v-if=\"getClass(msg) === 'right'\" class=\"message-right\">\r\n                  <img :src=\"getImageUrl(myAvatar)\" alt=\"myimage\" style=\"width: 30px; height: 30px;\">\r\n                </div>\r\n                <!-- <div v-if=\"index !== contactsdata.length - 1\" class=\"divider\"></div> -->\r\n              </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"verboxrightbottom\">\r\n            <div class=\"btn-group\">\r\n              <!-- <el-button class=\"btn2\" type=\"text\" icon=\"el-icon-orange\" style=\"font-size: 25px; color: #25c672;\"></el-button>\r\n              <el-button class=\"btn2\" type=\"text\" icon=\"el-icon-folder-opened\" style=\"font-size: 25px; color: #25c672;\"></el-button>\r\n              <el-button class=\"btn2\" type=\"text\" icon=\"el-icon-picture-outline\" style=\"font-size: 25px; color: #25c672;\"></el-button>\r\n              <el-button class=\"btn2\" type=\"text\" icon=\"el-icon-mic\" style=\"font-size: 25px; color: #25c672;\"></el-button> -->\r\n            </div>\r\n            <input type=\"text\" v-model=\"msgtext\" @keyup.enter=\"sendMsg\" class=\"text-input\">\r\n            <div class=\"send-btn\">\r\n              <button class=\"btn3\" style=\"color: #25c672;font-size: 16px;\" @click=\"sendMsg\">发送(Enter)</button>\r\n            </div>\r\n          </div>  \r\n        </div>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n  \r\n  <script>\r\n  export default {\r\n\r\n    // name: 'LoginBox',\r\n    data() {\r\n      var checkName = (rule, value, callback) => {\r\n          if (!value) {\r\n            return callback(new Error('用户名不能为空'));\r\n          }\r\n          setTimeout(() => {\r\n            if (value.length > 8) {\r\n              callback(new Error('用户名不能超过8个字符'));\r\n            } \r\n            else{callback();}\r\n          }, 1000);\r\n        };\r\n  \r\n      var validatePass = (rule, value, callback) => {\r\n        if (value === '') {\r\n            callback(new Error('请输入密码'));\r\n          } else {\r\n            if (this.ruleForm.checkPass !== '') {\r\n              this.$refs.ruleForm.validateField('checkPass');\r\n            }\r\n            callback();\r\n          }\r\n        };\r\n  \r\n      var validatePass2 = (rule, value, callback) => {\r\n          if (value === '') {\r\n            callback(new Error('请再次输入密码'));\r\n          } else if (value !== this.ruleForm.pass) {\r\n            callback(new Error('两次输入密码不一致!'));\r\n          } else {\r\n            callback();\r\n          }\r\n        };\r\n      return {\r\n        showInfoDialog: false,\r\n        showInputDialog: false,\r\n\r\n        isLogin: false,\r\n        isRegiste: true,\r\n        isChat: true,\r\n        isConnected: false,\r\n\r\n        showboxlr: true,\r\n        showboxchat: false,\r\n\r\n        contactsdata: '',\r\n        // friend_id: res[0][i].friend_id,\r\n        // avatar: null,\r\n        // remark: res[0][i].remark,\r\n        // chat_id: res[0][i].chat_id,\r\n        // 聊天室id\r\n        chatsdata: '',\r\n        // chat_with_id: res[i].chat_with_id,\r\n        // remark: res[i].remark,\r\n        // chat_id: res[i].chat_id,\r\n        // last_msg_time: res[i].last_msg_time,\r\n        // last_msg: res[i].last_msg,\r\n        // 消息id\r\n        msgsdata:'',\r\n        receivemsgdata:'',\r\n        chatfriend: '',\r\n        msgtext: '',\r\n\r\n        loginForm: {\r\n          username: '',\r\n          password: '',\r\n        },\r\n        ruleForm: {\r\n          username: '',\r\n          pass: '',\r\n          checkPass: '',\r\n        },\r\n        rules: {\r\n            username: [\r\n              { validator: checkName, trigger: 'blur' }\r\n            ],\r\n            pass: [\r\n              { validator: validatePass, trigger: 'blur' }\r\n            ],\r\n            checkPass: [\r\n              { validator: validatePass2, trigger: 'blur' }\r\n            ]\r\n          },\r\n        // CCC 头像url\r\n        myAvatar: '',\r\n        msgAvatar: '',\r\n        msgOfChat: -1,\r\n        // CCC1 搜索输入\r\n        searchInput: '',\r\n        changeNickname: '',\r\n        Nickname: '',\r\n      };\r\n    },\r\n\r\n  // 在页面刷新前执行断开连接操作\r\n  beforeCreate() {\r\n    window.addEventListener('beforeunload', this.disconnect); \r\n  },\r\n\r\n  created() {\r\n    console.log(\"myLogin.vue is running!\")\r\n    if (!this.isConnected) {\r\n      // 打开 WebSocket 连接\r\n      this.$socket.open();\r\n      // 设置连接状态\r\n      this.isConnected = true; \r\n      this.sockets.subscribe('receiveMessage',data => {\r\n          this.msgsdata.push(data[0])\r\n        })\r\n    }\r\n\r\n  },\r\n\r\n  mounted(){\r\n    console.log(\"mounted is running!\")\r\n\r\n    const dialog = document.querySelector('.el-dialog');\r\n\r\n    if (dialog) {\r\n        dialog.style.left = '-195px';\r\n      }\r\n  },\r\n\r\n    methods: {\r\n      disconnect() {\r\n      // 关闭WebSocket连接\r\n      this.$socket.close(); \r\n      // 移除监听事件\r\n      window.removeEventListener('beforeunload', this.disconnect); \r\n    },\r\n\r\n    // CCC 返回好友的头像url\r\n    getImageUrl(base64Data) {\r\n      if(base64Data)\r\n        return `data:image/jpeg;base64,${base64Data}`;\r\n      else\r\n        return \"src/images/avatar01.jpg\";\r\n\r\n    },\r\n\r\n    loginEvent () {\r\n    //   var password = this.loginForm.password\r\n      var data = {\r\n        id: this.loginForm.username,\r\n        password: this.loginForm.password\r\n      }\r\n      \r\n      this.$socket.emit('login', data)\r\n\r\n      this.sockets.subscribe('checkoutAnswer', data => {\r\n        // console.log(data)\r\n        if(data.msg===\"用户密码正确\"){\r\n            // alert(\"欢迎登录！\")\r\n            this.showboxchat = true\r\n            this.showboxlr = false\r\n            this.isChat = true\r\n            var user_id = this.loginForm.username\r\n            console.log(data)\r\n            //CCC 登录时取得头像数据\r\n            this.myAvatar = data.avatar\r\n            this.Nickname = data.nickname\r\n\r\n              this.$socket.emit('requestContacts', (user_id))\r\n              this.sockets.subscribe('returnContacts',data => {\r\n                this.contactsdata = data\r\n                console.log(data[0])\r\n              })\r\n              // this.$socket.emit('requestChats', (user_id))\r\n              // this.sockets.subscribe('returnChats',data => {\r\n              //   this.chatsdata = data\r\n              //   // console.log(data)\r\n              // })\r\n            \r\n            // console.log(this.chatsdata)\r\n            // this.chatsdata.chat_id\r\n            // console.log(chatid)\r\n        }\r\n        else{\r\n          alert(\"用户名或密码错误\")\r\n        }\r\n      })\r\n    },\r\n\r\n//     receiveallmsg(){\r\n//       var chat_id = this.chatsdata[0].chat_id\r\n//       console.log(chat_id)\r\n//       this.$socket.emit('requestMsgs', (chat_id))\r\n//       this.sockets.subscribe('returnMsgs',data => {\r\n//         this.msgsdata = data\r\n// })\r\n    // },\r\n\r\n    changeNick(){\r\n      var user_id = this.loginForm.username\r\n      console.log(user_id)\r\n      var new_nickname = this.changeNickname\r\n      console.log(new_nickname)\r\n      this.$socket.emit('changeNickname', user_id, new_nickname)\r\n      this.Nickname = new_nickname\r\n      this.showInputDialog = false\r\n    },\r\n    \r\n    getClass(msg) {\r\n      var user_id = this.loginForm.username\r\n\r\n      // console.log(msg.message_id)\r\n      if (msg.sender_id === user_id) {\r\n        console.log('right')\r\n        return 'right';\r\n      } else {\r\n        console.log('left')\r\n        return 'left';\r\n      }\r\n  },\r\n\r\n\r\n    receivemsg(friend) {\r\n      this.msgOfChat = friend.chat_id\r\n      this.chatfriend = friend;\r\n      var chat_id = this.chatfriend.chat_id\r\n      console.log(chat_id)\r\n      // CCC 定义显示的头像\r\n      this.msgAvatar = this.chatfriend.avatar\r\n      this.$socket.emit('requestMsgs', (chat_id))\r\n      this.sockets.subscribe('returnMsgs',data => {\r\n      this.msgsdata = data\r\n    })\r\n    },\r\n\r\n    // 发消息并更新消息列表\r\n    sendMsg(){\r\n      if (this.msgOfChat != -1){\r\n        var msgdata={\r\n          chat_id: this.chatfriend.chat_id,\r\n          sender_id: this.loginForm.username,\r\n          receiver_id: this.chatfriend.friend_id,\r\n          send_time: new Date().toISOString().slice(0, 19).replace('T', ' '),\r\n          message_content: this.msgtext\r\n        }\r\n        this.$socket.emit('sendMessage', (msgdata))\r\n        \r\n        var chat_id = this.chatfriend.chat_id\r\n        console.log(chat_id)\r\n\r\n        this.$socket.emit('requestMsgs', (chat_id))\r\n        this.sockets.subscribe('returnMsgs',data => {\r\n          this.msgsdata = data\r\n        })\r\n        this.msgtext = ''\r\n      }\r\n      else {\r\n        alert(\"请先选择一个聊天！\")\r\n      }\r\n      \r\n  },\r\n\r\n  // 注册\r\n    submitForm(formName) {\r\n    //   var id = this.ruleForm.username\r\n    //   var password = this.ruleForm.pass\r\n        \r\n      var data ={\r\n        id: this.ruleForm.username,\r\n        password: this.ruleForm.pass\r\n      } \r\n\r\n      var checkpass = this.ruleForm.checkPass\r\n      \r\n      if(checkpass === data.password){\r\n        this.$socket.emit('signup', data)\r\n        this.sockets.subscribe('signupFail', (msg) => {\r\n          alert('注册信息不正确')\r\n        })\r\n        // 登陆成功\r\n        this.sockets.subscribe('signupSuccess', (msg)=>{\r\n          alert('请登录')\r\n        })\r\n      }\r\n      else{\r\n        alert('注册信息不正确')\r\n      }\r\n    },\r\n\r\n    handleClose(done) {\r\n        this.$confirm('确认关闭？')\r\n          .then(_ => {\r\n            done();\r\n          })\r\n          .catch(_ => {});\r\n      },\r\n\r\n    deleteEvent () {\r\n        var user_id = this.loginForm.username\r\n\r\n        this.$socket.emit('cancelAccount', user_id)\r\n\r\n        this.sockets.subscribe('cancelAccountSuccess',() => {\r\n          alert(\"注销成功\")\r\n          // 缺：用户注销后跳转界面\r\n          this.showboxchat=false\r\n          this.showboxlr=true\r\n        })\r\n      },\r\n\r\n    requestContactsEvent () {\r\n      var user_id = this.loginForm.username\r\n\r\n      this.$socket.emit('requestContacts', user_id)\r\n\r\n      this.sockets.subscribe('returnContacts',data => {\r\n        \r\n        })\r\n      },\r\n\r\n    // resetForm(formName) {\r\n    //   this.$refs[formName].resetFields();\r\n    // },\r\n    \r\n    // 打开文件选择器\r\n    openFilePicker() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n\r\n    // 修改头像\r\n    changeAvatarRequest (event) {\r\n        const file = event.target.files[0];\r\n        if (!file) {\r\n          alert(\"!file\");\r\n          return;\r\n        }\r\n        var user_id = this.loginForm.username\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n          const imageData = reader.result.split(',')[1]; // 去除前缀信息\r\n          this.$socket.emit('changeAvatarRequest', user_id, imageData);\r\n        };\r\n        reader.readAsDataURL(file);\r\n        // // 图片压缩\r\n        // compressImage(file, maxWidth, maxHeight, quality, function(compressedDataURL) {\r\n        //   // 在这里可以使用压缩后的DataURL，例如显示在<img>元素中\r\n        //   const imgElement = document.getElementById('compressedImg');\r\n        //   imgElement.src = compressedDataURL;\r\n\r\n        //   var user_id = this.loginForm.username\r\n        //   const reader = new FileReader();\r\n        //   reader.onload = () => {\r\n        //     const imageData = reader.result.split(',')[1]; // 去除前缀信息\r\n        //     this.$socket.emit('changeAvatarRequest', user_id, imageData);\r\n        //   };\r\n        //   reader.readAsDataURL(file);\r\n        // });\r\n        // alert(\"get it\");\r\n        \r\n\r\n        // this.$socket.emit('changeAvatarRequest', user_id, file);\r\n\r\n        // 处理返回事件\r\n        this.sockets.subscribe('changeAvatar', (newAvatar) => {\r\n          this.myAvatar = newAvatar;\r\n          \r\n        });\r\n      },\r\n      // 压缩图片函数\r\n    compressImage(file, maxWidth, maxHeight, quality, callback) {\r\n      const reader = new FileReader();\r\n      reader.onload = function(event) {\r\n        const img = new Image();\r\n        img.src = event.target.result;\r\n        img.onload = function() {\r\n          const canvas = document.createElement('canvas');\r\n          let width = img.width;\r\n          let height = img.height;\r\n\r\n          // 计算压缩后的宽度和高度\r\n          if (width > maxWidth) {\r\n            height *= maxWidth / width;\r\n            width = maxWidth;\r\n          }\r\n          if (height > maxHeight) {\r\n            width *= maxHeight / height;\r\n            height = maxHeight;\r\n          }\r\n\r\n          canvas.width = width;\r\n          canvas.height = height;\r\n          const ctx = canvas.getContext('2d');\r\n\r\n          // 在canvas上绘制压缩后的图片\r\n          ctx.drawImage(img, 0, 0, width, height);\r\n\r\n          // 将canvas上的图片转为压缩后的DataURL\r\n          const compressedDataURL = canvas.toDataURL('image/jpeg', quality / 100);\r\n\r\n          // 调用回调函数传递压缩后的DataURL\r\n          callback(compressedDataURL);\r\n        };\r\n      };\r\n      reader.readAsDataURL(file);\r\n    },\r\n\r\n    // CCC1 添加好友\r\n    addFriend(){\r\n      // alert('add')\r\n      this.$socket.emit('addFriend', \r\n      {user_id: this.loginForm.username,\r\n      friend_id: this.searchInput}\r\n      );\r\n      \r\n      this.sockets.subscribe('addFriendFail', () => {\r\n        alert(\"用户不存在！\");\r\n      });\r\n      this.sockets.subscribe('addFriendSuccess', (contact, pci) => {\r\n        this.$socket.emit('requestContacts', (this.loginForm.username))\r\n      });\r\n\r\n      this.searchInput = ''\r\n    },\r\n    // CCC1 删除好友\r\n    deleteFriend(friend) {\r\n      event.preventDefault();\r\n      const confirmed = confirm('确认删除该好友吗?这将清除所有的聊天记录！');\r\n      if (confirmed) {\r\n        // 执行删除操作\r\n        this.chatfriend = friend;\r\n        this.$socket.emit('deleteFriend', friend.chat_id,this.loginForm.username, friend.friend_id);\r\n        \r\n        this.sockets.subscribe('deleteFriendSuccess', () => {\r\n          // alert(\"删除成功！\");\r\n          this.$socket.emit('requestContacts', (this.loginForm.username))\r\n        });\r\n      } else {\r\n        // 用户点击取消，不执行删除操作\r\n      }\r\n      \r\n\r\n    },\r\n  }\r\n} \r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped>\r\n  .main-box {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    // margin: auto;\r\n    // position: relative;\r\n    position: absolute;\r\n    border-radius: 10px;\r\n    top: 42.4%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n\r\n    width: 800px;\r\n    height: 700px;\r\n    // padding: 25px;\r\n    background-color: #ecf0f3;\r\n    box-shadow: 10px 10px 10px #d1d9e6, -10px -10px 10px #f9f9f9;\r\n    border-radius: 12px;\r\n    overflow: hidden;\r\n    .container {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      position: relative;\r\n      // margin-top: 200px;\r\n      \r\n      top: 0;\r\n      width: 800px;\r\n      height: 100%;\r\n      padding: 0px;\r\n      background-color: #ecf0f3;\r\n      // background-color: #05000b;\r\n\r\n      transition: all 1.25s;\r\n      form {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        height: 100%;\r\n        color: #a0a5a8;\r\n        .title {\r\n          text-align: center;\r\n          font-size: 34px;\r\n          font-weight: 700;\r\n          // line-height: 3;\r\n          color: #181818;\r\n        }\r\n        .text {\r\n          margin-top: 30px;\r\n          margin-bottom: 12px;\r\n        }\r\n        .form__input {\r\n          width: 250px;\r\n          height: 40px;\r\n          margin: 4px 0;\r\n          padding-left: 25px;\r\n          font-size: 13px;\r\n          letter-spacing: 0.15px;\r\n          border: none;\r\n          outline: none;\r\n          background-color: #ecf0f3;\r\n          transition: 0.25s ease;\r\n          border-radius: 8px;\r\n          box-shadow: inset 2px 2px 4px #d1d9e6, inset -2px -2px 4px #f9f9f9;\r\n        }\r\n      }\r\n    }\r\n    .container-register {\r\n      z-index: 100;\r\n      // margin-right: 0px;\r\n    }\r\n    .container-login {\r\n      z-index: 0;\r\n      margin-left: 0px;\r\n    }\r\n    .is-hidden{\r\n      opacity: 0;\r\n    }\r\n    .is-txl {\r\n      left: 0;\r\n      transition: 1.25s;\r\n      transform-origin: right;\r\n    }\r\n    .is-z200 {\r\n      z-index: 200;\r\n      transition: 1.25s;\r\n    }\r\n    .switch {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      height: 100%;\r\n      width: 400px;\r\n      // padding: 50px;\r\n      z-index: 200;\r\n      // border-radius: 2px;\r\n      transition: 1.25s;\r\n      background-color: #0e9747;\r\n      overflow: hidden;\r\n      box-shadow: 4px 4px 10px #9a9da0, -4px -4px 10px #9a9da0;\r\n      color: #a0a5a8;\r\n      .switch__circle {\r\n        position: absolute;\r\n        width: 400px;\r\n        height: 500px;\r\n        border-radius: 50%;\r\n        background-color: #ecf0f3;\r\n        box-shadow: inset 8px 8px 12px #d1d9e6, inset -8px -8px 12px #f9f9f9;\r\n        bottom: -60%;\r\n        left: -60%;\r\n        transition: 1.25s;\r\n      }\r\n      .switch__circle_top {\r\n        top: -30%;\r\n        left: 60%;\r\n        width: 400px;\r\n        height: 300px;\r\n      }\r\n      .switch__container {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        flex-direction: column;\r\n        position: absolute;\r\n        width: 400px;\r\n        padding: 50px 55px;\r\n        transition: 1.25s;\r\n        h2 {\r\n          font-size: 34px;\r\n          font-weight: 700;\r\n          line-height: 3;\r\n          color: #181818;\r\n        }\r\n        p {\r\n          font-size: 14px;\r\n          letter-spacing: 0.25px;\r\n          text-align: center;\r\n          line-height: 1.6;\r\n        }\r\n      }\r\n    }\r\n    .login {\r\n      left: calc(100% - 400px);\r\n      .switch__circle {\r\n        left: 0;\r\n      }\r\n    }\r\n    .primary-btn {\r\n      width: 180px;\r\n      height: 50px;\r\n      border-radius: 25px;\r\n      margin-top: 50px;\r\n      text-align: center;\r\n      line-height: 50px;\r\n      font-size: 14px;\r\n      letter-spacing: 2px;\r\n      background-color: #4b70e2;\r\n      color: #f9f9f9;\r\n      cursor: pointer;\r\n      // box-shadow: 2px 2px 4px #a9a9a9, -2px -2px 4px #a9a9a9;\r\n    }\r\n\r\n  }\r\n\r\n  .fade-enter-active,.fade-leave-active {\r\n  transition: opacity 1s;\r\n}\r\n\r\n  .fade-enter,.fade-leave-to {\r\n  opacity: 0;\r\n}\r\n  .container {\r\n  display: flex;\r\n  width: 50%;\r\n  margin: auto;\r\n  /* padding: 10px; */\r\n  height: 700px;\r\n  border-radius: 10px;\r\n  /* align-items: center; */\r\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\r\n}\r\n.box {\r\n  /* border: 1px solid black; */\r\n  padding: 0px;\r\n  height: 700px;\r\n}\r\n.verboxleft{\r\n  background-color: #2e2e2e;\r\n  flex: 1;\r\n  border-radius: 5px;\r\n  background-image: url('./images/星空.png');\r\n  background-size: cover;\r\n}\r\n.avatar-container {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n.avatar {\r\n  width: 50px;\r\n  height: 50px;\r\n  /* border-radius: 50%; */\r\n  /* background-color: #ccc; */\r\n  /* object-fit: cover; */\r\n}\r\n.userinfo-dialog .el-dialog{\r\n  border-radius: 10px;\r\n}\r\n.image-dialog {\r\n  max-width: 30%;\r\n  max-height: 30%;\r\n}\r\n.image-text {\r\n  overflow: hidden;\r\n  border-bottom:1px solid #d8d7d6;\r\n}\r\n.image-text .image-dialog {\r\n  float: left;\r\n  margin-right: 10px;\r\n}\r\n.btn-dialog{\r\n  border-top:1px solid #d8d7d6;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n}\r\n.btn-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n.btn{\r\n  margin-top: 20px;\r\n  /* margin-right: 10px;\r\n  margin-left: 10px; */\r\n  width: 60px;\r\n  height: 60px;\r\n  background-color: #2e2e2e;\r\n}\r\n.verboxmid{\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #e6e5e4;\r\n  flex: 5;\r\n}\r\n.verboxmidtop{\r\n  background-color: #f7f7f7;\r\n  height: 50px;\r\n  border-right:1px solid #d8d7d6;\r\n  border-bottom:1px solid #d8d7d6;\r\n}\r\n.search-input {\r\n  flex: 1;\r\n  height: 20px;\r\n  padding: 5px;\r\n  border-radius: 10px;\r\n  margin-left: 5px;\r\n  margin-top: 10px;\r\n  /* margin-right: 10px; */\r\n  border: none;\r\n  background-color: #e2e2e2;\r\n}\r\n.verboxmidbottom{\r\n  background-color: #e6e5e4;\r\n  height: 650px;\r\n  border-top:1px solid #d8d7d6;\r\n}\r\n.scroll-content {\r\n  height: 650px;\r\n  overflow: auto;\r\n}\r\n.msg-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.right{\r\n  align-self: flex-end;\r\n}\r\n.left{\r\n  align-self: flex-start;\r\n}\r\n.message-left {\r\n  float: left;\r\n  margin-right: 10px;\r\n}\r\n.message-right {\r\n  float: right;\r\n  margin-left: 10px;\r\n}\r\n.divider {\r\n  margin-top: 10px;\r\n  border-bottom: 1px solid #ededed;\r\n  margin-bottom: 0px;\r\n}\r\n::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n::-webkit-scrollbar-thumb {\r\n  background-color: #c4c0bf;\r\n  border-radius: 3px;\r\n}\r\n::-webkit-scrollbar-track {\r\n  background-color: #e6e5e4;\r\n}\r\n.verboxright{\r\n  background-color: #f5f5f5;\r\n  flex: 12;\r\n}\r\n.verboxrighttop{\r\n  background-color: #f5f5f5;\r\n  height: 50px;\r\n  /* box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3); */\r\n  border-bottom:1px solid #efefef;\r\n}\r\n.verboxrightmid{\r\n  background-color: #f5f5f5;\r\n  height: 490px;\r\n  /* box-shadow: 0px 0.5px 4px rgba(0, 0, 0, 0.3); */\r\n  border-top:1px solid #efefef;\r\n  border-bottom:1px solid #efefef;\r\n  overflow: auto;\r\n}\r\n.verboxrightbottom{\r\n  display:flex;\r\n  background-color: #f5f5f5;\r\n  height: 160px;\r\n  /* box-shadow: 0px 0.5px 4px rgba(0, 0, 0, 0.3); */\r\n  border-top:1px solid #efefef;\r\n  flex-direction: column;\r\n}\r\n.btn-group {\r\n  display: flex;\r\n  /* justify-content: space-between; */\r\n  justify-content: flex-start;\r\n  margin-left: 20px;\r\n  margin-right: 20px;\r\n}\r\n/* .btn2 {\r\n  margin-right: 5px;\r\n  margin-left: 5px;\r\n} */\r\n.text-input{\r\n  flex: 1;\r\n  height: 30px;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  /* margin: 10px; */\r\n  margin-right: 5px;\r\n  margin-left: 5px;\r\n  margin-bottom: 5px;\r\n  /* background-color: #fff; */\r\n  border:none;\r\n  background-color: #f5f5f5;\r\n}\r\ninput:focus {\r\n  // border: 2px solid blue;\r\n  outline: none;\r\n}\r\n.send-btn {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n.btn3{\r\n  width: 20%;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  margin-bottom: 8px;\r\n  margin-right: 25px;\r\n  background-color: #e9e9e9;\r\n}\r\n\r\n  </style>\r\n  \r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}